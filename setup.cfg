[metadata]
name = sxhkd-parser
version = attr: sxhkd_parser.__version__
author = Gabriel Lisaca
author_email = gabriel.lisaca@gmail.com
keywords = hotkey, parser, sxhkd
description = Library for parsing config files for sxhkd, and command-line programs using it
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/Hoboneer/sxhkd-parser
license = GPL-3.0-or-later

# What's the audience for this package?
classifiers =
  Development Status :: 3 - Alpha
  Operating System :: POSIX
  Programming Language :: Python :: 3 :: Only
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
  License :: DFSG approved
platforms =
  POSIX
  Linux

[options]
packages = sxhkd_parser
python_requires = >=3.7
# No dependencies.

[flake8]
# E501: line too long  ;; `black` should do most of the work here, the rest should be handled manually and would just serve as noise here.
# E203: whitespace before ':' ;; again, defer to `black`.
# D107: missing docstring in __init__  ;; too pedantic.
extend-ignore = E501, E203, D107
#per-file-ignores =
#  tests/*.py:D100,D103

[isort]
include_trailing_comma = yes
use_parentheses = yes
atomic = yes
line_length = 79
# Match `black` output.
multi_line_output = 3

[mypy]
files = sxhkd_parser/**/*.py
warn_unused_configs = yes
# Reporting
show_column_numbers = yes
show_error_codes = yes
# Dynamic typing
disallow_any_unimported = yes
disallow_any_generics = yes
disallow_subclassing_any = yes
# Untyped definitions and calls
disallow_untyped_calls = yes
disallow_untyped_defs = yes
## Decorators are kinda weird, so don't check them yet.
# None and Optional handling
no_implicit_optional = yes
##"yes" by default, but just in case.
strict_optional = yes
# Warnings
warn_unused_ignores = yes
##"yes" by default, but just in case.
warn_no_return = yes
warn_return_any = yes
warn_unreachable = yes
warn_redundant_casts = yes
# Misc. strictness flags
allow_redefinition = yes
implicit_reexport = no
strict_equality = yes
